- package: vtsnn
  version: 0.0.0
  data-files:
    - network_config/*.yml

- model: vtsnn
  description: VT-SNN models
  sourcecode:
    select:
      - exclude: slayerPytorch
  operations:
    prepare-data:
      description: Preprocess data for training
      main: preprocess
      flags:
        save_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        tactile_path: /datasets/eventdata/batch2/aces_recordings/
        video_path: /datasets/eventdata/batch2/prophesee_recordings/
        trajectory_path: /datasets/eventdata/batch2/traj_start_ends/
        threshold: 1
        selection: grasp_lift_hold
        modes: vitac # vi, tac, vitac
        bin_duration: 0.02
        n_sample_per_object: 20
        remove_outlier: 0
    downsample-vision:
      description: Downsample vision data with sum pool and save as one file
      main: downsample_images
      flags:
        path: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        theta: 10
        tsample: 325
        tauRho: 1
        count: 400 # total number of samples
    tact-snn:
      description: Train tactile model using SNN
      main: train_tac_snn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - tsr_stop
        - sc_true
        - sc_false
        - lr
        - theta
        - tauRho
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
        - loss_type
      flags:
        batch_size: 8
        epochs: 500
        lr: 0.001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        tsample: 325
        tauRho: 1
        tsr_stop: 325
        sc_true: 150
        sc_false: 5
        theta: 10
        sample_file: 1
        hidden_size: 32
        checkpoint_dir: . 
        output_size: 20
        loss_type: 0
      compare:
        - =batch_size
        - =epochs
        - =tsample
        - =tsr_stop
        - =sc_true
        - =sc_false
        - =lr
        - =theta
        - =tauRho
        - =sample_file
        - =hidden_size
        - =loss_type
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    vis-snn:
      description: Train vizual model
      main: train_vis_snn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - tsr_start
        - tsr_stop
        - sc_true
        - sc_false
        - hidden_size
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
        - theta
        - tauRho
        - loss_type
      flags:
        batch_size: 8
        epochs: 500
        lr: 0.001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        tsample: 325
        tsr_start: 0
        tsr_stop: 325
        sc_true: 150
        sc_false: 5
        sample_file: 1
        output_size: 20
        theta: 10
        tauRho: 1
        hidden_size: 32
        checkpoint_dir: .
        loss_type: 0
      compare:
        - =batch_size
        - =epochs
        - =tsample
        - =tsr_stop
        - =sc_true
        - =sc_false
        - =lr
        - =sample_file
        - =hidden_size
        - =theta
        - =tauRho
        - =loss_type
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - acc/train as acc_train
        - loss/test as loss_test
        - acc/test as acc_test
        - max acc/test as max_acc_test
    mm-snn:
      description: Train MM model
      main: train_mm_snn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - tsr_start
        - tsr_stop
        - sc_true
        - sc_false
        - lr
        - sample_file
        - theta
        - tauRho
        - output_size
        - loss_type
      flags:
        batch_size:
          default: 8
        epochs:
          default: 500
        lr:
          default: 0.001
        data_dir:
          default: /home/tasbolat/some_python_examples/data_VT_SNN_new
        tsample:
          default: 325
        tsr_start:
          default: 0
        tsr_stop:
          default: 325
        sc_true:
          default: 150
        sc_false:
          default: 5
        sample_file:
          default: 1        
        output_size:
          default: 20
        checkpoint_dir: .
        theta: 10
        tauRho: 1
        loss_type: 0
      compare:
        - =batch_size
        - =prob
        - =epochs
        - =tsample
        - =tsr_stop
        - =sc_true
        - =sc_false
        - =lr
        - =sample_file
        - =theta
        - =tauRho
        - =loss_type
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - acc/test as acc_test
        - acc/train as acc_train
        - max acc/test as max_acc_test
    benchmark:
      description: Run benchmarks on trained model
      main: run_benchmark
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN/slip_data/bin_150/
        bsize: 1
        time: 900
        log: gpu.json
        output_size: 2
        hidden_size: 1024
        sample_file: 1
        network_config: /home/jethro/network_config/slip.yml
        saved_weights: /home/jethro/.pyenv/versions/miniconda3-4.3.30/.guild/runs/3d77e9ed1e4c4a8a9d3f67582d3aa391/weights-600-2.360.pt
    tact-ann:
      description: Train tactile model using ANN (MLP-GRU)
      main: train_tac_ann
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 600
        lr: 0.0001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        hidden_size: 32
        checkpoint_dir: . #/home/tasbolat/some_python_examples/VT_SNN/logged_models/
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    vis-ann:
      description: Train vision model using ANN (MLP-GRU)
      main: train_vis_ann
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
        - output_size
      flags:
        batch_size: 8
        epochs: 400
        lr: 0.0001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        hidden_size: 32
        checkpoint_dir: .
        output_size: 20
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    mm-ann:
      description: Train multimodal model using ANN (MLP-GRU)
      main: train_mm_ann
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 400
        lr: 0.0001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        hidden_size: 32
        output_size: 20
        checkpoint_dir: . 
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    tact-cnn3d:
      description: Train tactile model usin CNN3D
      main: cnn_files/train_tac_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 200
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        output_size: 20
        checkpoint_dir: . #/home/tasbolat/some_python_examples/VT_SNN/logged_models/
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    vis-cnn3d:
      description: Train vision model using CNN3D
      main: cnn_files/train_vis_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 2000
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        output_size: 20
        checkpoint_dir: . 
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    mm-cnn3d:
      description: Train multimodal model using CNN3D
      main: cnn_files/train_mm_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 600
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        output_size: 20
        checkpoint_dir: .
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    make-tactile-rectangular:
      description: Converts tactile data into rectangular shape
      main: cnn_files/tactile_rectangular_shape
      flags:
        path: /home/tasbolat/some_python_examples/data_VT_SNN_new/
    tact-cnn3d-slip:
      description: Train tactile model usin CNN3D slip
      main:  cnn_files/train_tac_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
        - last_layer
      flags:
        batch_size: 8
        epochs: 200
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data/
        sample_file: 1
        output_size: 2
        checkpoint_dir: .
        last_layer: 11
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - =last_layer
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    vis-cnn3d-slip:
      description: Train vision model using CNN3D for slip
      main: cnn_files/train_vis_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
        - last_layer
      flags:
        batch_size: 8
        epochs: 700
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data/
        sample_file: 1
        output_size: 2
        checkpoint_dir: .
        last_layer: 2
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - =last_layer
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    mm-cnn3d-slip:
      description: Train multimodal model using CNN3D for slippage detection
      main: cnn_files/train_mm_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
        - last_layer_tact
        - last_layer_vis
      flags:
        batch_size: 8
        epochs: 600
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data/
        sample_file: 1
        output_size: 2
        checkpoint_dir: .
        last_layer_tact: 11
        last_layer_vis: 2
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - =last_layer_tact
        - =last_layer_vis
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train