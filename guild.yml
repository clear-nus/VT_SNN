- package: gpkg.vtsnn
  version: 0.1
  data-files:
    - network_config/*

- model: data  
  description: >
      Model for processing raw data.
- operations:
    preprocess:
      description: Preprocess raw data for training.
      main: vtsnn.preprocess
      flags:
        save_path: /home/jethro/data_VTSNN_test/
        tactile_path: /datasets/eventdata/batch2/aces_recordings/
        video_path: /datasets/eventdata/batch2/prophesee_recordings/
        trajectory_path: /datasets/eventdata/batch2/traj_start_ends/
        threshold: 1
        selection: grasp_lift_hold
        modes: vitac
        bin_duration: 0.02
        n_sample_per_object: 20
        remove_outlier: 0
        slip: 0
    downsample:
      description: Downsample vision data with sum pool and save as one file
      main: vtsnn.downsample
      requires:
        - config
      flags:
        path: /home/tasbolat/some_data_examples/data_VT_SNN_new/
        network_config: /home/jethro/container_weight.yml
  resources:
    config:
      description: SNN network config yml files
      sources:
        - file: network_config

- config: vtsnn-base
  sourcecode:
    - network_config
    - vtsnn
  operations:
    train:
      main: vtsnn.train_snn
      requires:
        - config
      flags:
        epochs: 500
        lr: 0.001
        sample_file: 1
        batch_size: 8
        loss: NumSpikes
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - =loss
        - loss/train as loss_train        
        - loss/test as loss_test
        - acc/train as acc_train        
        - acc/test as acc_test
        - max acc/train as max_acc_train
        - max acc/test as max_acc_test
  resources:
    config:
      description: SNN network config yml files
      sources:
        - file: network_config

- config: vtmlp-base
  operations:
    train:
      main: vtsnn.train_mlp
      flags:
        epochs: 500
        lr: 0.0001
        sample_file: 1
        batch_size: 8
        loss: NumSpikes
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - =loss
        - loss/train as loss_train
        - loss/test as loss_test
        - acc/train as acc_train
        - acc/test as acc_test
        - max acc/train as max_acc_train
        - max acc/test as max_acc_test
    
- model: vtsnn-tact-cw
  description: VT-SNN tactile-only model on Container & Weight Classification
  extends: vtsnn-base
  operations:
    train:
      description: Train the VT-SNN tactile-only model on Container & Weight Classification
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        network_config: network_config/container_weight.yml
        sample_file: 1
        hidden_size: 32
        mode: tact
        task: cw

- model: vtsnn-vis-cw
  description: VT-SNN vision-only model on Container & Weight Classification
  extends: vtsnn-base
  operations:
    train:
      description: Train the VT-SNN vision-only model on Container & Weight Classification
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        network_config: network_config/container_weight.yml
        sample_file: 1
        hidden_size: 32
        mode: vis
        task: cw

- model: vtsnn-mm-cw
  description: VT-SNN multi-modal model on Container & Weight Classification
  extends: vtsnn-base
  operations:
    train:
      description: Train the VT-SNN multi-modal model on Container & Weight Classification
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        network_config: network_config/container_weight.yml
        sample_file: 1
        hidden_size: 32
        mode: mm
        task: cw

- model: vtsnn-tact-sd
  description: VT-SNN tactile-only model on Slip Detection
  extends: vtsnn-base
  operations:
    train:
      description: Train the VT-SNN tactile-only model on Slip Detection
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data
        network_config: network_config/slip_detection.yml
        sample_file: 1
        hidden_size: 32
        mode: tact
        task: slip

- model: vtsnn-vis-sd
  description: VT-SNN vision-only model on Slip Detection
  extends: vtsnn-base
  operations:
    train:
      description: Train the VT-SNN vision-only model on Slip Detection
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data
        network_config: network_config/slip_detection.yml
        sample_file: 1
        hidden_size: 32
        mode: vis
        task: slip

- model: vtsnn-mm-sd
  description: VT-SNN multi-modal model on Slip Detection
  extends: vtsnn-base
  operations:
    train:
      description: Train the VT-SNN multi-modal model on Slip Detection
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data
        network_config: network_config/slip_detection.yml
        sample_file: 1
        hidden_size: 32
        mode: mm
        task: slip

- model: rest
  operations:
    benchmark:
      description: Run benchmarks on trained model
      main: vtsnn.run_benchmark
      flags:
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN/slip_data/bin_150/
        bsize: 1
        time: 900
        log: gpu.json
        output_size: 2
        hidden_size: 1024
        sample_file: 1
        network_config: /home/jethro/network_config/slip.yml
        saved_weights: /home/jethro/.pyenv/versions/miniconda3-4.3.30/.guild/runs/3d77e9ed1e4c4a8a9d3f67582d3aa391/weights-600-2.360.pt
    tact-cnn3d:
      description: Train tactile model usin CNN3D
      main: vtsnn.cnn.train_tac_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 200
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        output_size: 20
        checkpoint_dir: . #/home/tasbolat/some_python_examples/VT_SNN/logged_models/
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    vis-cnn3d:
      description: Train vision model using CNN3D
      main: vtsnn.cnn.train_vis_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 2000
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        output_size: 20
        checkpoint_dir: . 
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    mm-cnn3d:
      description: Train multimodal model using CNN3D
      main: vtsnn.cnn.train_mm_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
      flags:
        batch_size: 8
        epochs: 600
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/
        sample_file: 1
        output_size: 20
        checkpoint_dir: .
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    make-tactile-rectangular:
      description: Converts tactile data into rectangular shape
      main: vtsnn.cnn.tactile_rectangular_shape
      flags:
        path: /home/tasbolat/some_python_examples/data_VT_SNN_new/
    tact-cnn3d-slip:
      description: Train tactile model usin CNN3D slip
      main: vtsnn.cnn.train_tac_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - tsample
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
        - last_layer
      flags:
        batch_size: 8
        epochs: 200
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data/
        sample_file: 1
        output_size: 2
        checkpoint_dir: .
        last_layer: 11
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - =last_layer
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    vis-cnn3d-slip:
      description: Train vision model using CNN3D for slip
      main: vtsnn.cnn.train_vis_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - hidden_size
        - output_size
        - checkpoint_dir
        - last_layer
      flags:
        batch_size: 8
        epochs: 700
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data/
        sample_file: 1
        output_size: 2
        checkpoint_dir: .
        last_layer: 2
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =hidden_size
        - =last_layer
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
    mm-cnn3d-slip:
      description: Train multimodal model using CNN3D for slippage detection
      main: vtsnn.cnn.train_mm_cnn
      output-scalars: no
      objective:
        maximize: acc/test
      flags-import:
        - batch_size
        - epochs
        - lr
        - sample_file
        - output_size
        - checkpoint_dir
        - last_layer_tact
        - last_layer_vis
      flags:
        batch_size: 8
        epochs: 600
        lr: 0.00001
        data_dir: /home/tasbolat/some_python_examples/data_VT_SNN_new/slip_data/
        sample_file: 1
        output_size: 2
        checkpoint_dir: .
        last_layer_tact: 11
        last_layer_vis: 2
      compare:
        - =batch_size
        - =epochs
        - =lr
        - =sample_file
        - =output_size
        - =last_layer_tact
        - =last_layer_vis
        - loss/train as loss_train
        - max acc/train as max_acc_train
        - loss/test as loss_test
        - max acc/test as max_acc_test
        - acc/test as acc_test
        - acc/train as acc_train
